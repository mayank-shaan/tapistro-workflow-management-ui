import React from 'react';
import { Position } from 'reactflow';
import { Typography, Chip, Box } from '@mui/material';
import { Route } from '@mui/icons-material';
import BaseNode from './BaseNode';

const RouterNode = ({ data, id }) => {
  // Router nodes can have multiple branches for different routing paths
  const branches = data.config?.branches || data.branches || ['Option 1', 'Option 2', 'Option 3'];

  // Generate dynamic handles for each branch
  const customHandles = branches.map((branch, index) => ({
    type: 'source',
    position: Position.Bottom,
    id: branch.toLowerCase().replace(/\s+/g, '_'),
    style: {
      left: `${(100 / (branches.length + 1)) * (index + 1)}%`,
      transform: 'translateX(-50%)',
      backgroundColor: index === 0 ? '#4caf50' : index === 1 ? '#f44336' : index === 2 ? '#9c27b0' : '#ff9800'
    }
  }));

  return (
    <BaseNode 
      data={data} 
      color="#9c27b0" 
      icon={<Route sx={{ color: '#9c27b0', fontSize: '1rem' }} />}
      showSourceHandle={false}
      customHandles={customHandles}
    >
      <Typography variant="caption" display="block" sx={{ fontSize: '0.7rem', mb: 1 }}>
        Route by: {data.config?.routingField || 'Configure routing...'}
      </Typography>
      
      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, justifyContent: 'center' }}>
        {branches.map((branch, index) => (
          <Chip 
            key={index}
            label={branch}
            size="small"
            sx={{ 
              fontSize: '0.6rem', 
              height: '18px',
              backgroundColor: index === 0 ? '#4caf50' : index === 1 ? '#f44336' : index === 2 ? '#9c27b0' : '#ff9800',
              color: 'white',
              '& .MuiChip-label': {
                color: 'white'
              }
            }}
          />
        ))}
      </Box>
      
      {data.isEditMode && (
        <Typography variant="caption" display="block" sx={{ fontSize: '0.6rem', mt: 0.5, opacity: 0.7 }}>
          Click to configure routes
        </Typography>
      )}
    </BaseNode>
  );
};

export default RouterNode;